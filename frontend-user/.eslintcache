[{"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\index.js":"1","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\firebaseConfig.js":"3","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\redux\\reducers.js":"4","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\App.jsx":"5","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\registration.jsx":"6","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\movieIndex.jsx":"7","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\movieDetail.jsx":"8","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\login.jsx":"9","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\PrivateRoute.jsx":"10","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\ProvideAuth.jsx":"11","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\utility\\localStorageUtility.js":"12","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\useAuth.jsx":"13","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\useProvideAuth.jsx":"14","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\constants\\constants.js":"15","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\authenticate.js":"16","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\Copyright.jsx":"17","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\utility\\verificationUtility.js":"18","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\AuthRoute.jsx":"19"},{"size":1051,"mtime":1606983300789,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606819026064,"results":"22","hashOfConfig":"21"},{"size":426,"mtime":1606885525019,"results":"23","hashOfConfig":"21"},{"size":232,"mtime":1606973746442,"results":"24","hashOfConfig":"21"},{"size":1750,"mtime":1607016234951,"results":"25","hashOfConfig":"21"},{"size":9873,"mtime":1607015798197,"results":"26","hashOfConfig":"21"},{"size":430,"mtime":1607015163501,"results":"27","hashOfConfig":"21"},{"size":174,"mtime":1606826927842,"results":"28","hashOfConfig":"21"},{"size":8341,"mtime":1607015535310,"results":"29","hashOfConfig":"21"},{"size":765,"mtime":1606999750133,"results":"30","hashOfConfig":"21"},{"size":374,"mtime":1606974029033,"results":"31","hashOfConfig":"21"},{"size":2483,"mtime":1606999082757,"results":"32","hashOfConfig":"21"},{"size":221,"mtime":1606837117876,"results":"33","hashOfConfig":"21"},{"size":2943,"mtime":1607011486135,"results":"34","hashOfConfig":"21"},{"size":165,"mtime":1606975850395,"results":"35","hashOfConfig":"21"},{"size":2115,"mtime":1607015058277,"results":"36","hashOfConfig":"21"},{"size":449,"mtime":1606983857747,"results":"37","hashOfConfig":"21"},{"size":386,"mtime":1607007771708,"results":"38","hashOfConfig":"21"},{"size":890,"mtime":1607006258752,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1b4q4po",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\index.js",[],["82","83"],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\firebaseConfig.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\redux\\reducers.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\App.jsx",["84","85"],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\registration.jsx",["86"],"import React, { useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useAuth from \"../components/useAuth\";\r\nimport {\r\n  ButtonGroup,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport googleImg from \"../img/icon-google.png\";\r\nimport {\r\n  addRememberMeChoice,\r\n  getRememberMeChoice,\r\n} from \"../utility/localStorageUtility\";\r\nimport { checkPassword, validateEmail } from \"../utility/verificationUtility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(12),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  btnGoogle: {\r\n    color: \"#555555\",\r\n  },\r\n  btnFb: {\r\n    color: \"#3b5998\",\r\n  },\r\n  btnGoogleImg: {\r\n    width: 19,\r\n  },\r\n  logInText: {\r\n    fontFamily: \"Raleway, sans-serif\",\r\n  },\r\n  errorText: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default function Registration() {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let auth = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [remember, setRememberMe] = useState(getRememberMeChoice());\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n  const [formError, setFormError] = useState(null);\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const checkConfirmPassword = (password = \"\", confirmPassword = \"\") => {\r\n    return password === confirmPassword;\r\n  };\r\n\r\n  const checkFormValid = () => {\r\n    return (\r\n      validateEmail(email) &&\r\n      checkPassword(password) &&\r\n      checkConfirmPassword(password, confirmPassword)\r\n    );\r\n  };\r\n\r\n  const generateErrorOnInValid = () => {\r\n    if (!validateEmail(email)) {\r\n      setEmailError(\"Invalid email format\");\r\n    } else {\r\n      setEmailError(null);\r\n    }\r\n    if (!checkPassword(password)) {\r\n      setPasswordError(\"Passsword is weak\");\r\n    } else {\r\n      setPasswordError(null);\r\n    }\r\n    if (!checkConfirmPassword()) {\r\n      setConfirmPasswordError(\"Should be same as password\");\r\n    } else {\r\n      setConfirmPasswordError(null);\r\n    }\r\n  };\r\n\r\n  const registration = (event, email, password) => {\r\n    event.preventDefault();\r\n    setFormError(null);\r\n    if (checkFormValid()) {\r\n      auth.signUpWithEmail(\r\n        email,\r\n        password,\r\n        () => {\r\n          history.replace(from);\r\n        },\r\n        (error) => {\r\n          setFormError(error);\r\n        }\r\n      );\r\n    } else {\r\n      generateErrorOnInValid();\r\n    }\r\n  };\r\n\r\n  const signInWithGoogle = () => {\r\n    setFormError(null);\r\n    auth.signInWithGoogle(\r\n      () => {\r\n        history.replace(from);\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      }\r\n    );\r\n  };\r\n  const logInWithFacebook = () => {\r\n    setFormError(null);\r\n    auth.signInWithFacebook(\r\n      () => {\r\n        history.replace(from);\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const setOnEmailChangeListener = (ev) => {\r\n    setEmail(ev.target.value);\r\n    setEmailError(null);\r\n  };\r\n  const setOnPasswordChangeListener = (ev) => {\r\n    setPassword(ev.target.value);\r\n    setPasswordError(null);\r\n  };\r\n\r\n  const setOnConfirmPasswordChangeListener = (ev) => {\r\n    setConfirmPassword(ev.target.value);\r\n    if (ev.target.value !== password) {\r\n      setConfirmPasswordError(\"Should be same as password\");\r\n    } else {\r\n      setConfirmPasswordError(null);\r\n    }\r\n  };\r\n\r\n  const setOnRemmeberMeChangeListener = (ev) => {\r\n    const checked = ev.target.checked\r\n    setRememberMe(checked);\r\n    addRememberMeChoice(checked);\r\n    auth.setPersistenceHelper(\r\n      checked,\r\n      () => {\r\n        console.log(\"Preference saved\");\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n      <CssBaseline />\r\n      <Card elevation={4}>\r\n        <CardHeader title=\"Sign Up\" />\r\n        <CardContent>\r\n          <div className={classes.paper}>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={setOnEmailChangeListener}\r\n                value={email}\r\n                autoFocus\r\n                helperText={emailError}\r\n                error={emailError !== null}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={setOnPasswordChangeListener}\r\n                value={password}\r\n                helperText={passwordError}\r\n                error={passwordError !== null}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                autoComplete=\"confirm-password\"\r\n                onChange={setOnConfirmPasswordChangeListener}\r\n                value={confirmPassword}\r\n                helperText={confirmPasswordError}\r\n                error={confirmPasswordError !== null}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={remember}\r\n                    value=\"remember\"\r\n                    color=\"primary\"\r\n                    onChange={setOnRemmeberMeChangeListener}\r\n                  />\r\n                }\r\n                label=\"Remember me\"\r\n              />\r\n              {formError && (\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                  className={classes.errorText}\r\n                >\r\n                  {formError.message}\r\n                </Typography>\r\n              )}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={(event) => registration(event, email, password)}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Box>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"subtitle1\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                >\r\n                  Or Sign Up with\r\n                </Typography>\r\n                <ButtonGroup\r\n                  variant=\"text\"\r\n                  aria-label=\"Sign Up with third party provider\"\r\n                  fullWidth={true}\r\n                >\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className={classes.btnGoogle}\r\n                    startIcon={\r\n                      <Icon>\r\n                        <img\r\n                          src={googleImg}\r\n                          alt=\"google\"\r\n                          className={classes.btnGoogleImg}\r\n                        />\r\n                      </Icon>\r\n                    }\r\n                    onClick={signInWithGoogle}\r\n                  >\r\n                    Google\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className={classes.btnFb}\r\n                    startIcon={<Icon>facebook-official</Icon>}\r\n                    onClick={logInWithFacebook}\r\n                  >\r\n                    FaceBook\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"subtitle1\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                  className={classes.logInText}\r\n                >\r\n                  Already a member?\r\n                  <Link href=\"login\" variant=\"body2\">\r\n                    {\" Log In\"}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </CardContent>\r\n        <Box m={2}>\r\n          <Copyright />\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\movieIndex.jsx",["87"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useAuth from \"../components/useAuth\";\r\n\r\nconst MovieIndex = (props) => {\r\n  let history = useHistory();\r\n  let auth = useAuth();\r\n  const signOut = () => {\r\n  auth.signout(()=>{\r\n    history.replace({ pathname: \"/login\" });\r\n  });\r\n  }\r\n    return (\r\n        <div>\r\n            Movie index \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieIndex;","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\movieDetail.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\containers\\login.jsx",["88"],"import React, { useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useAuth from \"../components/useAuth\";\r\nimport {\r\n  ButtonGroup,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport googleImg from \"../img/icon-google.png\";\r\nimport {\r\n  addRememberMeChoice,\r\n  getRememberMeChoice,\r\n} from \"../utility/localStorageUtility\";\r\nimport { checkPassword, validateEmail } from \"../utility/verificationUtility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(12),\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  btnGoogle: {\r\n    color: \"#555555\",\r\n  },\r\n  btnFb: {\r\n    color: \"#3b5998\",\r\n  },\r\n  btnGoogleImg: {\r\n    width: 16,\r\n  },\r\n  signUpText: {\r\n    fontFamily: \"Raleway, sans-serif\",\r\n  },\r\n  errorText: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let auth = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const [remember, setRememberMe] = useState(getRememberMeChoice());\r\n  const [formError, setFormError] = useState(null);\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const checkFormValid = () => {\r\n    return validateEmail(email) && checkPassword(password);\r\n  };\r\n\r\n  const generateErrorOnInValid = () => {\r\n    if (validateEmail(email)) {\r\n      setEmailError(null);\r\n    } else {\r\n      setEmailError(\"Invalid email format\");\r\n    }\r\n    if (checkPassword(password)) {\r\n      setPasswordError(null);\r\n    } else {\r\n      setPasswordError(\"This can be there\");\r\n    }\r\n  };\r\n  const login = (event, email, password) => {\r\n    event.preventDefault();\r\n    setFormError(null);\r\n    if (checkFormValid()) {\r\n      auth.signInWithEmail(\r\n        email,\r\n        password,\r\n        () => {\r\n          history.replace(from);\r\n        },\r\n        (error) => {\r\n          setFormError(error);\r\n        }\r\n      );\r\n    } else {\r\n      generateErrorOnInValid();\r\n    }\r\n  };\r\n\r\n  const signInWithGoogle = () => {\r\n    setFormError(null);\r\n    auth.signInWithGoogle(\r\n      () => {\r\n        history.replace(from);\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      }\r\n    );\r\n  };\r\n  const logInWithFacebook = () => {\r\n    setFormError(null);\r\n    auth.signInWithFacebook(\r\n      () => {\r\n        history.replace(from);\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const setOnEmailChangeListener = (ev) => {\r\n    setEmail(ev.target.value);\r\n    setEmailError(null);\r\n  };\r\n  const setOnPasswordChangeListener = (ev) => {\r\n    setPassword(ev.target.value);\r\n    setPasswordError(null);\r\n  };\r\n\r\n  const setOnRemmeberMeChangeListener = (ev) => {\r\n    const checked = ev.target.checked\r\n    setRememberMe(checked);\r\n    addRememberMeChoice(checked);\r\n    auth.setPersistenceHelper(\r\n      checked,\r\n      () => {\r\n        console.log(\"Preference saved\");\r\n      },\r\n      (error) => {\r\n        setFormError(error);\r\n      })\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n      <CssBaseline />\r\n      <Card elevation={4}>\r\n        <CardHeader title=\"Log In\" />\r\n        <CardContent>\r\n          <div className={classes.paper}>\r\n            <form className={classes.form} type=\"POST\" noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                type=\"email\"\r\n                onChange={setOnEmailChangeListener}\r\n                autoFocus\r\n                helperText={emailError}\r\n                error={emailError !== null}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={setOnPasswordChangeListener}\r\n                helperText={passwordError}\r\n                error={passwordError !== null}\r\n              />\r\n              <Typography align=\"right\" variant=\"caption\" component=\"p\">\r\n                <Link href=\"#\" variant=\"caption\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={remember}\r\n                    value=\"remember\"\r\n                    color=\"primary\"\r\n                    onChange={setOnRemmeberMeChangeListener}\r\n                  />\r\n                }\r\n                label=\"Remember me\"\r\n              />\r\n              {formError && (\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                  className={classes.errorText}\r\n                >\r\n                  {formError.message}\r\n                </Typography>\r\n              )}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={(event) => login(event, email, password)}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <ButtonGroup\r\n                variant=\"text\"\r\n                aria-label=\"Sign In with third party provider\"\r\n                fullWidth={true}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  className={classes.btnGoogle}\r\n                  startIcon={\r\n                    <Icon>\r\n                      <img\r\n                        src={googleImg}\r\n                        alt=\"google\"\r\n                        className={classes.btnGoogleImg}\r\n                      />\r\n                    </Icon>\r\n                  }\r\n                  onClick={signInWithGoogle}\r\n                >\r\n                  Google\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  className={classes.btnFb}\r\n                  startIcon={<Icon>facebook-official</Icon>}\r\n                  onClick={logInWithFacebook}\r\n                >\r\n                  FaceBook\r\n                </Button>\r\n              </ButtonGroup>\r\n              <Box>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"subtitle1\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                  className={classes.signUpText}\r\n                >\r\n                  New to MovieWeb?\r\n                  <Link href=\"registration\" variant=\"body2\">\r\n                    {\" Sign Up\"}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </CardContent>\r\n        <Box m={4}>\r\n          <Copyright />\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\ProvideAuth.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\utility\\localStorageUtility.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\useAuth.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\useProvideAuth.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\constants\\constants.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\authenticate.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\Copyright.jsx",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\utility\\verificationUtility.js",[],"C:\\Users\\ASUS\\Projects\\movieweb\\frontend-user\\src\\components\\AuthRoute.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":8},{"ruleId":"93","severity":1,"message":"97","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":8,"column":9,"nodeType":"95","messageId":"96","endLine":8,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Grid' is defined but never used.","'signOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]